<project xmlns="https://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="https://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>edu.harvard.mcz</groupId>
	<artifactId>DataShot</artifactId>
	<version>1.12.0-SNAPSHOT</version>
	<!-- Remember to edit src/main/java/edu/harvard/mcz/imagecapture/ImageCaptureApp.java -->
	<name>datashot</name>
	<description>MCZ DataShot Collection Imaging Application</description>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<timestamp>${maven.build.timestamp}</timestamp>
		<maven.build.timestamp.format>yyyy-MM-dd HH:mm</maven.build.timestamp.format>
	</properties>
	<!-- Profile configuration -->
	<profiles>
		<!-- The configuration of the development profile -->
		<profile>
			<id>dev</id>
			<!-- The development profile is active by default -->
			<!--			<activation>-->
			<!--				<activeByDefault>true</activeByDefault>-->
			<!--			</activation>-->
			<properties>
				<!--
                    Specifies the build.profile.id property that must be equal than the name of
                    the directory that contains the profile specific configuration file.
                    Because the name of the directory that contains the configuration file of the
                    development profile is dev, we must set the value of the build.profile.id
                    property to dev.
                -->
				<build.profile.id>dev</build.profile.id>
			</properties>
		</profile>
		<!-- The configuration of the production profile -->
		<profile>
			<id>prod</id>
			<properties>
				<!--
                    Specifies the build.profile.id property that must be equal than the name of
                    the directory that contains the profile specific configuration file.
                    Because the name of the directory that contains the configuration file of the
                    production profile is prod, we must set the value of the build.profile.id
                    property to prod.
                -->
				<build.profile.id>prod</build.profile.id>
			</properties>
		</profile>
		<!-- The configuration of the testing profile -->
		<profile>
			<id>test</id>
			<properties>
				<!--
                    Specifies the build.profile.id property that must be equal than the name of
                    the directory that contains the profile specific configuration file.
                    Because the name of the directory that contains the configuration file of the
                    testing profile is test, we must set the value of the build.profile.id
                    property to test.
                -->
				<build.profile.id>test</build.profile.id>
			</properties>
		</profile>
		<!-- The configuration of the distribution profile -->
		<profile>
			<id>dist</id>
			<properties>
				<!--
                    Specifies the build.profile.id property that must be equal than the name of
                    the directory that contains the profile specific configuration file.
                    Because the name of the directory that contains the configuration file of the
                    testing profile is test, we must set the value of the build.profile.id
                    property to test.
                -->
				<build.profile.id>dist</build.profile.id>
			</properties>
		</profile>
		<profile>
			<!-- mvn package -P integrationTests -->
			<id>integrationTests</id>
			<build>
				<!-- Runs those tests which require connection to a database, will bring
					up a login dialog while running tests -->
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<excludedGroups>edu.harvard.mcz.imagecapture.tests.IgnoreInIntegration</excludedGroups>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<repositories>
		<repository>
			<id>central</id>
			<name>Maven Central</name>
			<url>https://repo1.maven.org/maven2/</url>
		</repository>
	</repositories>
	<dependencies>
		<dependency>
			<groupId>antlr</groupId>
			<artifactId>antlr</artifactId>
			<version>20030911</version>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>20040616</version>
		</dependency>
		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.14</version>
		</dependency>
		<dependency>
			<groupId>com.adobe.xmp</groupId>
			<artifactId>xmpcore</artifactId>
			<version>6.1.10</version>
		</dependency>
		<dependency>
			<groupId>com.google.zxing</groupId>
			<artifactId>core</artifactId>
			<version>3.4.0</version>
		</dependency>
		<dependency>
			<groupId>com.google.zxing</groupId>
			<artifactId>javase</artifactId>
			<version>3.4.0</version>
		</dependency>
		<dependency>
			<groupId>com.itextpdf</groupId>
			<artifactId>itextpdf</artifactId>
			<version>5.5.13.1</version>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>1.4.200</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.miglayout/miglayout-swing -->
		<dependency>
			<groupId>com.miglayout</groupId>
			<artifactId>miglayout-swing</artifactId>
			<version>5.2</version>
		</dependency>
		<dependency>
			<groupId>com.jgoodies</groupId>
			<artifactId>jgoodies-forms</artifactId>
			<version>1.9.0</version>
		</dependency>
		<dependency>
			<groupId>com.jgoodies</groupId>
			<artifactId>jgoodies-common</artifactId>
			<version>1.8.1</version>
		</dependency>
		<dependency>
			<groupId>dom4j</groupId>
			<artifactId>dom4j</artifactId>
			<version>1.6.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-csv</artifactId>
			<version>1.8</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.boofcv/boofcv-core -->
		<dependency>
			<groupId>org.boofcv</groupId>
			<artifactId>boofcv-core</artifactId>
			<version>0.36.1</version>
		</dependency>
		<dependency>
			<groupId>org.filteredpush</groupId>
			<artifactId>event_date_qc</artifactId>
			<version>2.0.2</version>
		</dependency>
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
			<version>6.4.3</version>
		</dependency>
		<dependency>
			<groupId>javassist</groupId>
			<artifactId>javassist</artifactId>
			<version>3.12.1.GA</version>
		</dependency>
		<dependency>
			<groupId>javax.transaction</groupId>
			<artifactId>jta</artifactId>
			<version>1.1</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.drewnoakes</groupId>
			<artifactId>metadata-extractor</artifactId>
			<version>2.14.0</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>8.0.20</version>
		</dependency>
		<dependency>
			<groupId>org.swinglabs</groupId>
			<artifactId>swingx</artifactId>
			<version>1.6.1</version>
		</dependency>
		<dependency>
			<groupId>org.imgscalr</groupId>
			<artifactId>imgscalr-lib</artifactId>
			<version>4.2</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.13.3</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-ehcache</artifactId>
			<version>5.4.10.Final</version>
		</dependency>
		<dependency>
			<!-- TODO -->
			<!--<groupId>org.hibernate.orm</groupId>-->
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<!--<version>6.0.0.Alpha2</version>-->
			<version>5.4.16.Final</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.json/json -->
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20200518</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>2.13.3</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<version>2.13.3</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>2.0.0-alpha1</version>
		</dependency>
		<dependency>
			<groupId>org.jxmapviewer</groupId>
			<artifactId>jxmapviewer2</artifactId>
			<version>2.5</version>
		</dependency>
	</dependencies>
	<build>
		<resources>
			<resource>
				<directory>${basedir}/src/main/java</directory>
				<filtering>true</filtering>
			</resource>
			<!--
                Placeholders that are found from the files located in the configured resource
                directories are replaced with the property values found from the profile
                specific configuration file.
            -->
			<resource>
				<directory>${basedir}/src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<filters>
			<!--
                Ensures that the config.properties file is always loaded from the
                configuration directory of the active Maven profile.
            -->
			<filter>${basedir}/profiles/${build.profile.id}/config.properties</filter>
		</filters>
		<testResources>
			<testResource>
				<directory>${basedir}/src/test/java</directory>
				<includes>
					<include>**/*.jpg</include>
					<include>**/*.JPG</include>
				</includes>
			</testResource>
			<testResource>
				<directory>${basedir}/src/test/resources</directory>
			</testResource>
		</testResources>
		<plugins>
			<!-- (1) Copies production hibernate and log4j configuration files from
					src/main/resources/ into target/classes, then -->
			<!-- (2) Assembles an executable jar file (jar-with-dependencies), then -->
			<!-- (3) Copies the executable jar file into the build/ directory. -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.7</version>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.shared</groupId>
						<artifactId>maven-filtering</artifactId>
						<version>1.3</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/classes/</outputDirectory>
							<overwrite>true</overwrite>
							<resources>
								<resource>
									<directory>${basedir}/src/main/resources/</directory>
									<targetPath>${basedir}/target/classes/</targetPath>
									<filtering>true</filtering>
									<includes>
										<include>hibernate.cfg.xml</include>
										<include>log4j2.xml</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<verbose>true</verbose>
					<fork>true</fork>
					<source>9</source>
					<target>9</target>
				</configuration>
			</plugin>
			<plugin>
				<!-- Exclude integration tests from default test phase (see integrationTests 
					profile) -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.0.0-M3</version>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.surefire</groupId>
						<artifactId>surefire-junit47</artifactId>
						<version>3.0.0-M3</version>
					</dependency>
				</dependencies>
				<configuration>
					<includes>
						<include>**/*.class</include>
					</includes>
					<excludedGroups>edu.harvard.mcz.imagecapture.tests.IntegrationTest</excludedGroups>
				</configuration>
			</plugin>
			<!-- Copy project dependency -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.1.1</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<!-- exclude junit, we need runtime dependency only -->
							<includeScope>runtime</includeScope>
							<!--							<outputDirectory>${project.build.directory}/lib/</outputDirectory>-->
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Package with dependencies -->
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<mainClass>edu.harvard.mcz.imagecapture.ImageCaptureApp</mainClass>
						</manifest>
					</archive>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>						<!-- this is used for inheritance merges -->
						<phase>package</phase>						<!-- bind to the packaging phase -->
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
